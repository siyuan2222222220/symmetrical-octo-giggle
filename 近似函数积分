//我们常常可以使用矩形法近似计算函数的定积分。 

//矩形法将函数曲线分割成若干个小矩形，并计算这些小矩形的面积之和作为积分的近似值。 
//我们现规定：函数 f(x) 在 [a, b) 区间上的近似积分，
//就是将 f(x) 从端点 a 往右到端点 b，
//划分成的 b - a 个宽度为 1 的小矩形的面积之和。
//每个小矩形的高为其最左端在函数上的取值。
//例如：矩形 [a,a+1) 的高为 f(a)。

//给定整数 a, b, c, d, e, f, g，

//有分段函数 func(x)=asin(bx) + ccos(dx)    x≥0，
 //                              ex2 + fx + g               x<0。

//多次询问，每次询问给定整数 l 和 r，求函数 func(x) 在 [l, r) 的近似积分。

//输入
//输入第一行包含七个整数，依次表示 a, b, c, d, e, f, g。(-10 ≤ a, b, c, d, e, f, g ≤ 10)
//接下来若干行输入，每行为一次询问，一次询问包含两个整数，依次表示该询问的 l 和 r。(-50 ≤ l ≤ r ≤ 50)
//整数之间均用一个空格隔开。文件以EOF结束。

//输出
//对每次询问输出一行，包含一个小数，为近似积分的结果。
//结果精确到小数点后两位，四舍五入。
#include<stdio.h>
#include<math.h>
#include<stdlib.h>
int main()
{
	double a, b, c, d, e, f, g;
	scanf("%lf%lf%lf%lf%lf%lf%lf",&a,&b,&c,&d,&e,&f,&g);
	
		 
		double l,r;
		while(scanf("%lf%lf",&l,&r)!=EOF)
		{
			//接下来是分析环节
			//首先我们输入abcdefg确定了分段函数
			//接着我们是不是又输入了l,r用来做左右端点
			//因此，题目说分成 r - l 个宽度为 1 的小矩形的面积之和
			//并且用左边的端点计算此时的函数值
			//如果左端点>=0 func(x)=asin(bx) + ccos(dx)  
			//如果左端点<0 则ex^2 + fx + g  
			//所以总的来说我们只需要循环
			//选择，相加 
			double area=0;
			int i=0;
			for(i=l;i<r;i++)
			{
				if(i>=0)
				{
					area+=1.0*a*sin(b*i)+1.0*c*cos(d*i);
				}	
				if(i<0)
				{
					area+=e*i*i + f*i + g;
				}
			} 
			printf("%.2f\n",area);
		}
		
		return 0;
	
}
