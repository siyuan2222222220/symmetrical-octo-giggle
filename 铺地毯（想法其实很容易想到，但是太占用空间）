#include<stdio.h>
int main()
{
	//输入 
	//输入地毯的数量 
	int blanket_num;
	scanf("%d",&blanket_num);
	
	//输入表示所求的地面的点的坐标 (x,y)
	int x,y;
	scanf("%d%d",&x,&y);
	
	//中间过程
	//我有一个不错的想法
	//把坐标系当成一个二维数组
	//让他们初始化为0
	//然后再用地毯的编号来赋值
	//例如:点（2,2）表示的这块区域被3号地毯覆盖
	//那么坐标轴这个二维数组arr[2][2]=3; 
	
	//但是问题来了，我怎么利用数组的知识来进行覆盖
	//首先我们就定义二维坐标系是
	//arr[1000000][1000000]={0}; 
	//然后每一个地毯就是里面的小块
	//即已知左下角坐标为（a,b） 
	//又知道宽和高
	//就可以知道每块毛毯代表的数组范围
	//因此，嵌套两层循环就能准确的
	//给每一个数组中的元素赋值为该地毯的编号 
	//这样的话，我们应该在输入地毯的信息时就进入循环 
	//把代码拿下来 
	
	//开始执行 
	//输入铺设地毯的左下角的坐标 (a,b) 
	//以及地毯在 x 轴和 y 轴方向的长度。 
	int arr[100000][100000]={0}; 
	
	//i=1表示地毯的编号 
	int i=0;
	for(i=1;i<=blanket_num;i++)
	{
		int a,b;
		int len_x,len_y;
		scanf("%d%d%d%d",&a,&b,&len_x,&len_y);
		int j=0;
		for(j=0;j<=len_x;j++)
		{
			int k=0;
			for(k=0;k<=len_y;k++)
			{
				arr[a+j][b+k]=i; 
			}
		} 
	}
	//输出 
	//输出所求的地毯的编号
	//若此处没有被地毯覆盖则输出 -1。
	
	if(arr[x][y])
	{
		printf("%d\n",arr[x][y]);
	}
	else
	printf("-1\n");
	return 0; 
}
