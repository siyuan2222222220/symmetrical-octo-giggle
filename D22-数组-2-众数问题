//问题描述：
//给定含有n个元素的多重集合S，
//每个元素在S中出现的次数称为该元素的重数，
//其中重数最大的元素称为众数。
//例如，S={1，2，2，2，3，5}，则S的众数是2，其重数为3。

//编程任务：
//对于给定的由n 个正整数组成的多重集合S，编程计算S 的众数及其重数。

//输入
//单样例。
//第1行输入集合S中元素个数n(1≤n≤50000);
//接下来的n 行中，每行输入一个正整数x（0≤x≤105）。

//输出
//输出结果包括2行，
//第1行给出众数，
//第2行是该众数的重数。(如果有多个众数，只输出最小的那个)

#include<stdio.h>
#include<string.h>
#include<math.h>
int main()
{
	int n;
	while(scanf("%d",&n)!=EOF)
	{
		int cnt[100005]={0};
		int x=0;
		int i=0;
		for(i=0;i<n;i++)
		{
			scanf("%d",&x);
			cnt[x]++;
		}
		
		int sign=0;
		int max=cnt[0];
		
		i=0;
		for(i=0;i<100005;i++)
		{
			if(cnt[i]>max)
			{
				max=cnt[i];
				sign=i;
			}
			
		}
		printf("%d\n",sign);
		printf("%d\n",max);
	}
	return 0;
 } 
